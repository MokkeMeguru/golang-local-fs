#+TITLE: Golang Local File Server

* What is this repo?
This is the helper file server to build cloud native server.

You will replace this repo into Google Cloud Storage.

* How to Use
write this image into docer-compose like...

#+BEGIN_SRC yaml
version: "3"
services:
  local_fs:
    build: containers/local_fs
    ports:
      - 5577:5577
    volumes:
      - "./containers/local_fs/fstorage:/local_fs"
#+END_SRC

and then, clone this repo as follows

#+begin_example
$ ls -l | grep docker-compose.yml
docker-compose.yml
$ mkdir containers
$ git clone https://github.com/MokkeMeguru/golang-local-fs containers/local_fs
$ docker-compose build
$ docker-compose run --service-port local_fs
#+end_example


* API usage
** GET  \slash files\slash :file-name
get a file

*** responses
- 200: SUCCESS, you got file
- 400: BADREQUEST (see. JSON response)
  - 1300: invalid file-name
  - 1400: file not exist
  - 1401: selected file-name represents the folder
- 500: INTERNALSEVEREROR
  - 1402: file read err

** POST \slash files\slash :file-name
post a file (file is into the formdata as "file")

*** responses
- 200: SUCCESS, you saved file
- 400: BADREQUEST
  - 1300: invalid file-name
  - 1500: duplicate file
- 500: INTERNALSEVEREROR
  - 1501: file write err

* Example
** GET
#+begin_example
$ curl -i http://localhost:5577/files/Ey008jGU4AIET5W.jpeg
HTTP/1.1 200 OK
Accept-Ranges: bytes
Content-Disposition: inline
Content-Length: 1627760
Content-Type: image/jpeg
Last-Modified: Wed, 14 Apr 2021 02:25:00 GMT
Date: Wed, 14 Apr 2021 16:40:19 GMT

Warning: Binary output can mess up your terminal. Use "--output -" to tell
Warning: curl to output it to your terminal anyway, or consider "--output
Warning: <FILE>" to save to a file.
#+end_example


#+begin_example
$ curl -i http://localhost:5577/files/Ey008jGU4AIET5Wa.jpeg
HTTP/1.1 400 Bad Request
Content-Type: application/json; charset=utf-8
Date: Wed, 14 Apr 2021 16:39:58 GMT
Content-Length: 13
#+end_example
** POST
#+begin_example
$ curl -isS 'http://localhost:5577/files/samplebra.png' -X POST -F "file=@../portcard-api/resources/sample.png"
HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8
Date: Wed, 14 Apr 2021 17:00:51 GMT
Content-Length: 2

{}
#+end_example

#+begin_example
$ curl -isS 'http://localhost:5577/files/..samplebra.png' -X POST -F "file=@../portcard-api/resources/sample.png"
HTTP/1.1 400 Bad Request
Content-Type: application/json; charset=utf-8
Date: Wed, 14 Apr 2021 17:02:07 GMT
Content-Length: 13

{"code":1300}
#+end_example
